const Getlanguages = {"metadata":{"allOf":[{"type":"object","properties":{"platform":{"type":"string","default":"api","$schema":"http://json-schema.org/draft-04/schema#","description":"api"},"code":{"type":"string","default":"en_GB","$schema":"http://json-schema.org/draft-04/schema#","description":"the language code in the format “language code_code of the country”, which is used to display the names of the languages. The language code is represented only in lowercase letters, the country code only in uppercase letters (example en_GB, es_ES, ru_RU etc). If this option is not present, then English is used by default"}},"required":["platform"]}]},"response":{"200":{"type":"object","properties":{"err":{"type":"string","description":"the text of the error. It is null if the response status is 200. Otherwise, it contains a string"},"result":{"type":"array","items":{"type":"object","properties":{"full_code":{"type":"string","description":"the language code in the format “language code_code of the country”"},"code_alpha_1":{"type":"string","description":"the language code in the “language code” format"},"englishName":{"type":"string","description":"English name of the language"},"codeName":{"type":"string","description":"the language name translated using the language specified by the query parameter “code”"},"flagPath":{"type":"string","description":"the relative address of which is the image of the country flag. Example static/flags/afrikaans. The full address for downloading the flag will be https://backenster.com/v2/static/flags/afrikaans.png. In order to download flags in increased resolutions, you should add to this parameter: @2x or @3x (example https://backenster.com/v2/static/flags/afrikaans@2x.png or  https://backenster.com/v2/static/flags/afrikaans@3x.png)"},"testWordForSyntezis":{"type":"string","description":"a word for testing a speech synthesizer"},"modes":{"type":"array","description":"an array of objects, each of which is a description of the function that is supported in the given language","items":{"type":"object","properties":{"name":{"type":"string","description":"name of the function. Currently, only 4 functions are widely supported: “Speech synthesis“, “Image recognition“, “Translation“, “Speech recognition“"},"value":{"type":"boolean","description":"logical value true or false, which shows the status of the function: on or off"},"genders":{"type":"boolean","description":"logical value true or false, which shows the ability to synthesize speech for both sexes. Displayed only for function “Speech synthesis“"}}}}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"properties":{"err":{"type":"string","description":"the text of the error. It is null if the response status is 200. Otherwise, it contains a string","examples":["Token absent"]}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostTranslate = {"body":{"type":"object","required":["to","data","platform"],"properties":{"from":{"type":"string","description":"the language code in the format “language code_code of the country” from which the text is translated. The language code is represented only in lowercase letters, the country code only in uppercase letters (example en_GB, es_ES, ru_RU and etc.). If this parameter is not present, the auto-detect language mode is enabled","examples":["en_GB"]},"to":{"type":"string","description":"language code in the format “language code_code of the country” to which the text is translated (required)","examples":["de_DE"]},"data":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"data for translation"},"translateMode":{"type":"string","enum":["html"],"description":"Describe the input text format. Possible value is \"html\" for  translating and preserving html structure. If value is not  specified or is other than \"html\" than plain text is translating.  "},"enableTransliteration":{"type":"boolean","description":"If true response includes sourceTransliteration and targetTransliteration fields.\n          platform:"},"platform":{"type":"string","description":"api","default":"api"}},"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"type":"object","required":["err","result"],"properties":{"err":{"type":"string","description":"the text of the error. It is null if the response status is 200. Otherwise, it contains a string"},"result":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"result of translation. In the event that a line was sent to the translation, the result is also a string; if an array of strings, then we also get an array of strings","examples":["London ist die Hauptstadt und größte Stadt Englands und des Vereinigten Königreichs."]},"sourceTransliteration":{"type":"string","description":"return only if enableTransliteration request param is true. Transliteration of source data. In the event that a line was sent to the translation, the result is also a string; if an array of strings, then we also get an array of strings","examples":["London is the capital and largest city of England and of the United Kingdom."]},"targetTransliteration":{"type":"string","description":"return only if enableTransliteration request param is true. Transliteration results. In the event that a line was sent to the translation, the result is also a string; if an array of strings, then we also get an array of strings","examples":["London ist die Hauptstadt und grosste Stadt Englands und des Vereinigten Konigreichs."]}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"properties":{"err":{"type":"string","description":"the text of the error. It is null if the response status is 200. Otherwise, it contains a string","examples":["Token absent"]}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
export { Getlanguages, PostTranslate }
